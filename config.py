import os
from dotenv import load_dotenv
import sqlite3
import logging

load_dotenv()
logging.basicConfig(level=logging.INFO)

# –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –∑ –∑–º—ñ–Ω–Ω–∏—Ö –æ—Ç–æ—á–µ–Ω–Ω—è
BOT_TOKEN = os.getenv('BOT_TOKEN')
ADMIN_ID_RAW = os.getenv('ADMIN_ID', '0')
ADMIN_IDS = [int(x.strip()) for x in ADMIN_ID_RAW.split(",") if x.strip()]
SPLIT_API_TOKEN = os.getenv('SPLIT_API_TOKEN')
SPLIT_API_URL = os.getenv('SPLIT_API_URL')
REVIEWS_CHANNEL_ID = int(os.getenv('REVIEWS_CHANNEL_ID', '0'))
RESTART_ON_ERROR = os.getenv('RESTART_ON_ERROR', 'true').lower() == 'true'
MAIN_CHANNEL_ID = int(os.getenv('MAIN_CHANNEL_ID', '0'))
CARD_NUMBER = os.getenv('CARD_NUMBER')
VIDEO_PATH = "payment_example.mp4"

# –¶—ñ–Ω–∏ –Ω–∞ –∑—ñ—Ä–∫–∏ —Ç–∞ Telegram Premium
STAR_PRICES = {
    "50‚≠ê ‚Äì 42.5‚Ç¥": {"stars": 50, "price": 42.5, "type": "stars"},
    "100‚≠ê ‚Äì 85‚Ç¥": {"stars": 100, "price": 85, "type": "stars"},
    "200‚≠ê ‚Äì 170‚Ç¥": {"stars": 200, "price": 170, "type": "stars"},
    "300‚≠ê ‚Äì 255‚Ç¥": {"stars": 300, "price": 255, "type": "stars"},
    "400‚≠ê ‚Äì 340‚Ç¥": {"stars": 400, "price": 340, "type": "stars"},
    "500‚≠ê ‚Äì 390‚Ç¥": {"stars": 500, "price": 390, "type": "stars"},
    "1000‚≠ê ‚Äì 825‚Ç¥": {"stars": 1000, "price": 825, "type": "stars"},
    "3 –º—ñ—Å—è—Ü—ñüíé ‚Äì 669‚Ç¥": {"months": 3, "price": 669, "type": "premium"},
    "6 –º—ñ—Å—è—Ü—ñ–≤üíé ‚Äì 999‚Ç¥": {"months": 6, "price": 999, "type": "premium"},
    "12 –º—ñ—Å—è—Ü—ñ–≤üíé ‚Äì 1699‚Ç¥": {"months": 12, "price": 1699, "type": "premium"},
}

# –¢–∏–º—á–∞—Å–æ–≤–µ –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å
orders = {}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–∞–∑—ã
def load_users():
    try:
        conn = sqlite3.connect('bot_database.db')
        c = conn.cursor()
        c.execute("SELECT user_id FROM users")
        user_ids = {row[0] for row in c.fetchall()}
        conn.close()
        return user_ids
    except sqlite3.Error as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
        return set()

# user_ids –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∏–∑ –±–∞–∑—ã —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
user_ids = load_users()
